#!/usr/bin/env lua

local home = os.getenv("HOME")
package.path = package.path .. string.format(";%s/.scripts/lua/?.lua", home)
local lfs = require("lfs")
local menuhelper = require("menuhelper")

local function get_path_of_selected_entry(entries, selected)
    for _, entry in ipairs(entries) do
        if entry.name == selected then
            return entry.filepath
        end
    end
end

local USER_DESKTOP_ENTRIES = os.getenv("HOME").."/.local/share/applications"

local entries = Get_desktop_entries()

local to_display = {}
for _, entry in ipairs(entries) do
    if not entry.is_hidden then
        table.insert(to_display, entry.name)
    end
end

local menuopts = table.concat(to_display, "\n")

local selected = Menu(menuopts)

if selected then
    local filepath = get_path_of_selected_entry(entries, selected)
    local filename = filepath:match("([^/]+)$")
    local file = io.open(filepath, "r")
    local content

    if file then
        print("File opened")
        content = file:read("*all")
        file:close()
    else
        content = nil
    end

    if content then
        if not content:find("Hidden=") then
            local start_index, end_index = content:find("%[Desktop Entry%]\n")
            if start_index then
                content = content:sub(1, end_index).."Hidden=true\n"..content:sub(end_index+1)
            end
        else
            content = content:gsub("Hidden=false", "Hidden=true")
        end
        local new_filepath = USER_DESKTOP_ENTRIES.."/"..filename
        print("New filepath: "..new_filepath)
        local ok, message, error = lfs.mkdir(USER_DESKTOP_ENTRIES)
        if not ok then
            print("Error creating directory: "..error)
            print("Message: "..message)
        end
        local dir_attrib = lfs.attributes(USER_DESKTOP_ENTRIES)
        if not dir_attrib or dir_attrib.mode ~= "directory" then
            lfs.mkdir(USER_DESKTOP_ENTRIES)
        end
        local file = io.open(new_filepath, "w")
        if file then
            file:write(content)
            file:close()
        end
    end
 end
